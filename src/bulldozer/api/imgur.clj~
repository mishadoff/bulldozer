(ns bulldozer.api.imgur
  (:require [clj-oauth2.client :as oauth2]
            [clojure.data.json :as json]))

(def ENDPOINT "https://api.imgur.com/3")

(def CLIENT_ID "fb3657d87b4a7c1")
(def CLIENT_SECRET "87a12c39806cff44f5e75ee20059ab26252b92f8")

;; TODO Generalize
(def imgur-oauth2
  {:authorization-uri "https://api.imgur.com/oauth2/authorize"
   :access-token-uri "https://api.imgur.com/oauth2/token"
   ;:redirect-uri "/"
   :client-id CLIENT_ID
   :client-secret CLIENT_SECRET
   :access-query-param :access_token
;   :grant-type "authorization_code"
   :access-type "online"
   :response_type "token"
   :approval_prompt ""})

;; TODO Generalize
(def imgur-req (oauth2/make-auth-request imgur-oauth2))

;; TODO Generalize
(defn- get-access-token [req]
  (oauth2/get-access-token imgur-oauth2 (:params req) imgur-req))

;; (defn- google-user-email [access-token]a
;;   (let [response (oauth2/get "https://www.googleapis.com/oauth2/v1/userinfo" {:oauth access-token})]
;;     (get (parse-string (:body response)) "email")))
